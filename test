import pandas as pd
import requests
import time

# Function to convert GRCh37 position to GRCh38 using Ensembl API for FST_results.csv
# Note: This function uses the Ensembl REST API to convert positions from GRCh37 to GRCh38 make sure all column names are matching
# The function returns the GRCh38 start position if successful, otherwise None
def convert_grch37_to_grch38(chromosome, position):
    url = f"https://rest.ensembl.org/map/human/GRCh37/{chromosome}:{position}..{position}/GRCh38?"
    headers = {"Content-Type": "application/json"}
    
    try:
        response = requests.get(url, headers=headers)
        if response.status_code == 200:
            data = response.json()
            if data.get("mappings"):
                return data["mappings"][0]["mapped"]["start"]  # Return GRCh38 start position
        return None  # Return None if mapping fails
    except Exception as e:
        print(f"Error converting chr{chromosome}:{position} - {str(e)}")
        return None

# Load the CSV file
df = pd.read_csv("FST_results.csv")

# Convert positions and update the DataFrame
grch38_positions = []
total_snps = len(df)

for index, row in df.iterrows():
    chrom = row["Chromosome"]  # Ensure column name matches (case-sensitive)
    pos = row["Position"]
    
    new_pos = convert_grch37_to_grch38(chrom, pos)
    grch38_positions.append(new_pos if new_pos is not None else pos)  # Fallback to original if conversion fails
    
    # Progress tracking
    print(f"Processed SNP {index + 1}/{total_snps}: {row['SNP']} -> {new_pos}")
    
    time.sleep(0.2)  # Avoid API rate limits

# Replace the Position column with GRCh38 coordinates
df["Position"] = grch38_positions

# Save to new CSV
df.to_csv("FST_results_GRCh38.csv", index=False)
print("Conversion complete. Updated data saved to FST_results_GRCh38.csv")